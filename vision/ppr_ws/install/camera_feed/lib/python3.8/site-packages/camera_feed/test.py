import numpy as np

# Load the saved calibration results
def load_calibration_results(filename):
    """
    Load the calibration results from a .npz file.

    Parameters:
    - filename: The file name from which to load the matrices.
    
    Returns:
    - mtx_list: List of intrinsic matrices.
    - dist_list: List of distortion coefficients.
    - P_list: List of projection matrices.
    """
    data = np.load(filename)
    mtx_list = data['mtx']
    dist_list = data['dist']
    P_list = data['P']
    R_list = data['R']
    R = np.array([[-0.60184858,  0.4579465 , -0.65426546],
           [-0.79742926, -0.3000699 ,  0.52351182],
           [ 0.04341504,  0.83680527,  0.54577658]])
    T = np.array([  -200,  -40.55536   , -286.55454885]).reshape((3, 1))
    g_spatial_cam3 = np.concatenate(
        [np.concatenate([R, T], axis=1), np.array([0, 0, 0, 1]).reshape((1, 4))], axis=0)      
#    R = np.array([[-0.60184858,  0.4579465 , -0.65426546],
#           [-0.79742926, -0.3000699 ,  0.52351182],
#           [ 0.04341504,  0.83680527,  0.54577658]])
#    T = np.array([  57.69871518,  -40.55536   , -286.55454885]).reshape((3, 1))
  
       
    return mtx_list, dist_list, P_list, R_list , g_spatial_cam3
#def for_vis():
#data = np.load(filename)
#    P_list = data['P']
#
#    R = np.array([[-0.60184858,  0.4579465 , -0.65426546],
#           [-0.79742926, -0.3000699 ,  0.52351182],
#           [ 0.04341504,  0.83680527,  0.54577658]])
#    T = np.array([  -200,  -40.55536   , -286.55454885]).reshape((3, 1))
#    g_spatial_cam2 = np.concatenate(
#        [np.concatenate([R, T], axis=1), np.array([0, 0, 0, 1]).reshape((1, 4))], axis=0)  
#    
#    return P_list, g_spatial_cam3
#P0 = P_list[0]
#P1 = P_list[1]
#P2 = P_list[2]
#P3 = P_list[3]         
#P_list = [P0, P1, P2, P3]
#R_list = [RT01, RT12, RT23] 
# Example of loading the data
mtx_list, dist_list, P_list, R_list,g_spatial_cam3 = load_calibration_results("calibration_results.npz")
# Assuming P_list has the correct length and contains projection matrices


# Now you can use mtx_list, dist_list, and P_list for further processing.
print('\nK matrix: \n' ,mtx_list)
print('\nProjection: \n', P_list)
print('\nRotation: \n', R_list)
print('\ng_spatial_cam3: \n', g_spatial_cam3)
