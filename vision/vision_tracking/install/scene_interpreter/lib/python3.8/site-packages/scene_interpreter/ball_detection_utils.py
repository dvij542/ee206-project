import cv2
import numpy as np

def detect_ball_BGR_hough_circles(frame):
    lower_BGR = (20, 50, 80)
    upper_BGR = (170, 212, 245)

    mask1 = cv2.inRange(frame, lower_BGR, upper_BGR)
    blue, green, red = cv2.split(frame)
    red2 = (red - 22).astype(np.uint8)
    blue2 = (blue).astype(np.uint8)
    mask2 = cv2.compare(red2, green, cv2.CMP_GT)
    mask3 = cv2.compare(green, blue2, cv2.CMP_GT)
    mask = cv2.bitwise_and(mask1, mask2)
    mask = cv2.bitwise_and(mask, mask3)
    cv2.imshow("hsv_mask", mask)
    circles = cv2.HoughCircles(mask, cv2.HOUGH_GRADIENT, 1,
                               mask.shape[0]/3, param1=100, param2=10, minRadius=2, maxRadius=20)
    if circles is None:
        return None, None
    c = circles[0, :][0]
    center = (int(c[0]), int(c[1]))
    radius = c[2]

    return center, radius